{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommaso\\\\Desktop\\\\react-project2\\\\src\\\\components\\\\Recipes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material';\nimport RecipeCard from './RecipeCard';\nimport { recipesOptions, fetchData } from '../utils/fetchData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recipes = _ref => {\n  _s();\n  let {\n    recipes\n  } = _ref;\n  let newRecipes = recipes[0];\n  console.log(newRecipes);\n  const [currentPage, setCurrentPage] = useState(1);\n  const recipesPerPage = 9;\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = newRecipes ? newRecipes.results.slice(indexOfFirstRecipe, indexOfLastRecipe) : '';\n  function paginate(e, value) {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1600,\n      behavior: 'smooth'\n    });\n  }\n  if (newRecipes) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      id: \"recipes\",\n      sx: {\n        mt: {\n          lg: '20px',\n          xs: '10px'\n        },\n        ml: {\n          sm: '50px'\n        }\n      },\n      mt: \"50px\",\n      p: \"20px\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        sx: {\n          fontSize: {\n            lg: '44px',\n            xs: '30px'\n          }\n        },\n        mb: \"46px\",\n        children: \"Showing Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        sx: {\n          gap: {\n            lg: '107px',\n            xs: '50px'\n          }\n        },\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        children: currentRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(RecipeCard, {\n          recipe: recipe\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        mt: \"100px\",\n        alignItems: \"center\",\n        children: newRecipes.results.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n          color: \"standard\",\n          shape: \"rounded\",\n          defaultPage: 1,\n          count: Math.ceil(newRecipes.results.length / recipesPerPage),\n          page: currentPage,\n          onChange: paginate,\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Recipes, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = Recipes;\nexport default Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","RecipeCard","recipesOptions","fetchData","Recipes","recipes","newRecipes","console","log","currentPage","setCurrentPage","recipesPerPage","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","results","slice","paginate","e","value","window","scrollTo","top","behavior","mt","lg","xs","ml","sm","fontSize","gap","map","recipe","index","length","Math","ceil"],"sources":["C:/Users/Tommaso/Desktop/react-project2/src/components/Recipes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { Box, Stack, Typography } from '@mui/material';\r\n\r\nimport RecipeCard from './RecipeCard';\r\nimport { recipesOptions, fetchData } from '../utils/fetchData';\r\n\r\nconst Recipes = ({ recipes }) => {\r\n  let newRecipes = recipes[0];\r\n  console.log(newRecipes);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const recipesPerPage = 9;\r\n\r\n  const indexOfLastRecipe = currentPage * recipesPerPage;\r\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n  const currentRecipes = newRecipes ? newRecipes.results.slice(indexOfFirstRecipe, indexOfLastRecipe) : '';\r\n\r\n  function paginate(e, value) {\r\n    setCurrentPage(value);\r\n    window.scrollTo({ top: 1600, behavior: 'smooth' })\r\n  }\r\n\r\n  if(newRecipes) {\r\n    return (\r\n      <Box id=\"recipes\" sx={{\r\n        mt: { lg: '20px', xs: '10px'},\r\n        ml: { sm: '50px' }}}\r\n       mt=\"50px\" p=\"20px\">\r\n        <Typography variant=\"h4\" fontWeight=\"bold\" \r\n          sx={{ fontSize: { lg: '44px', xs: '30px' } }} mb=\"46px\"\r\n        >\r\n          Showing Results\r\n        </Typography>\r\n        <Stack direction=\"row\" sx={{ gap: { lg: '107px', xs: '50px' } }} \r\n          flexWrap=\"wrap\" \r\n          justifyContent=\"center\">\r\n          {currentRecipes.map((recipe, index) => (\r\n            <RecipeCard key={index} recipe={recipe}/>\r\n          ))}\r\n        </Stack>\r\n        <Stack mt='100px' alignItems='center'>\r\n            {newRecipes.results.length > 9 && (\r\n              <Pagination color='standard' shape='rounded'\r\n               defaultPage={1} count={Math.ceil(newRecipes.results.length / recipesPerPage)}\r\n               page={currentPage} onChange={paginate} size='large'>\r\n            \r\n              </Pagination>\r\n            )}\r\n        </Stack>\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Recipes"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}